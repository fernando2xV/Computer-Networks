Project is divided in 5 files: Server, Client and twitter credentials scripts + ImagesDownloaded file + this file (Project1.txt)

These scripts were developed in python 3.7.4 using Sublime Text 3 (Free edition) on a Windows machine.

Library needed: "Tweepy".
	How to install with pip --> a) Go to terminal where your files are located.
			    	    b) Type "pip install tweepy"

	If error ocurred because of Access Token Keys (See "twitter_credentials.py"), then you need to create a twitter developer account and generate those keys:
		a) Go to "developer.twitter.com" and create a twitter account (if you don't have one).
		b) Log in
		c) Once logged in, go to "Apps" -> Create an app
		d) Fill in the (required) fields (in the URL parts, you can put your github one).
		e) Once created the app, click on it and go to ->Keys and Tokens.
		f) API key and API secret keys will appear there. You will need to generate the Access token and Access token secret (you'll need these 4)
		g) Go to "twitter_credentials.py" and substitute the keys respectively (this will make the tweet gathering linked to your account).
---------------------------------------------------------------------------------------------------------------------------------------------------------


Put all those 3 files in the same directory.

[1] Open 3 new command prompts and go to the directory were all these 3 files are (on all 3 command prompts).

[2]First run the server script("server3D3.py") on one of the commands and then run the client scripts ("client3D3.py") on the other 2 command prompts.

[3]The server command will output "The Server is ready to receive" if it succesfully run it. The other 2 commands will output "Username: "

[4] Type in a desired username for each client and press enter(eg: "Fernando", "Antonio").

[5]Server should accept both connections and output the local address, port number and the hashed usernames (SHA256) (eg:"66384278", "90479205")

[6] From now on, clients will be able to communicate between them sending messages.

[7] Note: In clients command prompts, real usernames will be displayed(eg: "Fernando", "Antonio") but on server command prompt,
the hashed value of the usernames will be displayed, this way if someone access the server, he/se won't know the real username.

[8] Note: Encryption of the username is modified (with respect the original SHA256) so the mapping of the username outputs an 8 digit number.

[9] Note: 2 reserved words in chat ("TWEETS" and "PIC") for 2 different functions:

	"TWEETS": When typed "TWEETS" by any of the clients, that clients command prompt will ask for a "Twitter username".
		  When entered an existing username (eg: "spacex") --> The tweets twitted by that account in the last 2 days will be outputted to that clients command prompt.
		  When entered a non-existing username (eg:"3d3compnet") --> Command prompt will output "That account doesn't exist".
	
		  NB: Twitter username is not case sensitive (It is the same inserting "spacex" instead of "SpaceX")

	"PIC":    When typed "PIC" by any of the clients, that clients command prompt will ask for an "Image URL to download".
		  When entered a valid URL (eg:"https://i.kym-cdn.com/entries/icons/original/000/000/091/TrollFace.jpg") --> Command prompt will ask for a file name(eg: "first").
	  	  When enter is pressed, it will save that file as a .png in the "ImagesDownloaded" file.

		  NB: If 2 images are downloaded under the same file name (eg: "first.png"), the last one will be the one saved.
		  NB: If you want to download a picture, find the picture in google, open it in a new tab, and copy that URL.


[10] Till now we have 3 command prompts opened. If we close one of the clients command prompt (eg: Fernando client) --> "Closed connection from: " username will be outputed in the server's command prompt.
[11] If we close the server's side, nothing will happen in the clients command prompt till we try to send a message --> Error will occur and program will exit.


